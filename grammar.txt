A -> B end
B -> B C end
B -> C end
C -> D end
C -> F end
D -> E ident ; end 
D -> E ident [ ] ; end
E -> void end
E -> bool end
E -> int end
E -> float end
F -> E ident ( G ) J end
G -> H end
G -> void end
H -> H , I end
H -> I end
I -> E ident end
I -> E ident [ ] end
J -> { K M } end
K -> K L end
K -> '' end
L -> E ident ; end
L -> E ident [ ] ; end
M -> M N end
M -> '' end
N -> O end
N -> J end
N -> P end
N -> Q end
N -> T end
O -> U ; end
O -> ; end
P -> if ( U ) N P1 end
P1 -> else N end
P1 -> '' end
Q -> S end
Q -> R end
R -> for ( U ; U ; U ) N end 
S -> while ( U ) N end
T -> return ; end
T -> return U ; end
T -> break ; end 
U -> ident = U1 end 
U -> ident [ U1 ] = U1 end
U -> U1 end
U1 -> U1 | | U2 end
U1 -> U2 end
U2 -> U2 = = U3 end
U2 -> U2 ! = U3 end
U2 -> U3 end
U3 -> U3 < = U4 end
U3 -> U3 > = U4 end
U3 -> U3 < U4 end
U3 -> U3 > U4 end
U3 -> U4 end
U4 -> U4 & & U5 end
U4 -> U5 end
U5 -> U5 + U6 end
U5 -> U5 - U6 end
U5 -> U6 end
U6 -> U6 * U7 end
U6 -> U6 / U7 end
U6 -> U6 % U7 end
U6 -> U7 end 
U7 -> ! U8 end
U7 -> - U8 end
U7 -> + U8 end
U7 -> U8 end
U8 -> ( U ) end
U8 -> U9 end
U9 -> ident X end
X -> [ U9 ] end
X -> ( W ) end
X -> '' end
U9 -> U10 end
U10 -> bool_lit end
U10 -> int_lit end
U10 -> float_lit end
W -> V end
W -> '' end
V -> V , U end
V -> U end
